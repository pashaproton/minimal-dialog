{
  "version": 3,
  "sources": ["../../src/index.js"],
  "sourcesContent": ["const timeoutIds = {};\n\nconst isOutsideDialog = (dialogElement, e) => {\n  const rect = dialogElement.getBoundingClientRect();\n  return (\n    e.clientX < rect.left ||\n    e.clientX > rect.right ||\n    e.clientY < rect.top ||\n    e.clientY > rect.bottom\n  );\n};\n\nconst handleDialogClose = dialogElement => {\n  const dialogId = dialogElement.getAttribute(\"id\");\n  if (!timeoutIds[dialogId]) {\n    dialogElement.classList.remove(\"visible\");\n    timeoutIds[dialogId] = window.setTimeout(() => {\n      dialogElement.close();\n      delete timeoutIds[dialogId];\n    }, 300);\n  }\n};\n\nconst handleDialogClick = (dialogElement, e) => {\n  if (isOutsideDialog(dialogElement, e)) {\n    handleDialogClose(dialogElement);\n  }\n};\n\nconst bindDialogEvents = dialogElement => {\n  dialogElement.addEventListener(\"click\", e => handleDialogClick(dialogElement, e));\n  dialogElement.querySelectorAll(\"[data-dialog-close]\").forEach(el => {\n    el.addEventListener(\"click\", () => handleDialogClose(dialogElement));\n  });\n};\n\nconst createCloseButton = dialogElement => {\n  const closeBtn = document.createElement(\"a\");\n  closeBtn.classList.add(\"close\");\n  closeBtn.setAttribute(\"aria-label\", \"Close dialog\");\n  closeBtn.setAttribute(\"title\", \"Close dialog\");\n  closeBtn.setAttribute(\"type\", \"button\");\n  closeBtn.setAttribute(\"data-dialog-close\", \"\");\n  dialogElement.appendChild(closeBtn);\n};\n\nconst handleTriggerClick = e => {\n  const dialogElement = document.getElementById(e.target.dataset.dialog);\n  dialogElement.showModal();\n  dialogElement.classList.add(\"visible\");\n};\n\nconst bindTriggerEvents = trigger => trigger.addEventListener(\"click\", handleTriggerClick);\n\nconst getDialogTriggers = () => document.querySelectorAll(\"[data-dialog]\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const dialogsTriggers = getDialogTriggers();\n  const dialogsElements = document.querySelectorAll(\"dialog\");\n  dialogsTriggers.forEach(bindTriggerEvents);\n  dialogsElements.forEach(dialogElement => {\n    createCloseButton(dialogElement);\n    bindDialogEvents(dialogElement);\n  });\n});\n\ndocument.addEventListener(\"keydown\", e => {\n  if (e.key === \"Escape\") {\n    const openedDialog = document.querySelector(\"dialog.visible\");\n    if (openedDialog) {\n      e.preventDefault();\n      handleDialogClose(openedDialog);\n    }\n  }\n});\n"],
  "mappings": "MAAA,IAAMA,EAAa,CAAC,EAEdC,EAAkB,CAACC,EAAeC,IAAM,CAC5C,IAAMC,EAAOF,EAAc,sBAAsB,EACjD,OACEC,EAAE,QAAUC,EAAK,MACjBD,EAAE,QAAUC,EAAK,OACjBD,EAAE,QAAUC,EAAK,KACjBD,EAAE,QAAUC,EAAK,MAErB,EAEMC,EAAoBH,GAAiB,CACzC,IAAMI,EAAWJ,EAAc,aAAa,IAAI,EAC3CF,EAAWM,CAAQ,IACtBJ,EAAc,UAAU,OAAO,SAAS,EACxCF,EAAWM,CAAQ,EAAI,OAAO,WAAW,IAAM,CAC7CJ,EAAc,MAAM,EACpB,OAAOF,EAAWM,CAAQ,CAC5B,EAAG,GAAG,EAEV,EAEMC,EAAoB,CAACL,EAAeC,IAAM,CAC1CF,EAAgBC,EAAeC,CAAC,GAClCE,EAAkBH,CAAa,CAEnC,EAEMM,EAAmBN,GAAiB,CACxCA,EAAc,iBAAiB,QAASC,GAAKI,EAAkBL,EAAeC,CAAC,CAAC,EAChFD,EAAc,iBAAiB,qBAAqB,EAAE,QAAQO,GAAM,CAClEA,EAAG,iBAAiB,QAAS,IAAMJ,EAAkBH,CAAa,CAAC,CACrE,CAAC,CACH,EAEMQ,EAAoBR,GAAiB,CACzC,IAAMS,EAAW,SAAS,cAAc,GAAG,EAC3CA,EAAS,UAAU,IAAI,OAAO,EAC9BA,EAAS,aAAa,aAAc,cAAc,EAClDA,EAAS,aAAa,QAAS,cAAc,EAC7CA,EAAS,aAAa,OAAQ,QAAQ,EACtCA,EAAS,aAAa,oBAAqB,EAAE,EAC7CT,EAAc,YAAYS,CAAQ,CACpC,EAEMC,EAAqB,GAAK,CAC9B,IAAMV,EAAgB,SAAS,eAAe,EAAE,OAAO,QAAQ,MAAM,EACrEA,EAAc,UAAU,EACxBA,EAAc,UAAU,IAAI,SAAS,CACvC,EAEMW,EAAoBC,GAAWA,EAAQ,iBAAiB,QAASF,CAAkB,EAEnFG,EAAoB,IAAM,SAAS,iBAAiB,eAAe,EAEzE,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,IAAMC,EAAkBD,EAAkB,EACpCE,EAAkB,SAAS,iBAAiB,QAAQ,EAC1DD,EAAgB,QAAQH,CAAiB,EACzCI,EAAgB,QAAQf,GAAiB,CACvCQ,EAAkBR,CAAa,EAC/BM,EAAiBN,CAAa,CAChC,CAAC,CACH,CAAC,EAED,SAAS,iBAAiB,UAAW,GAAK,CACxC,GAAI,EAAE,MAAQ,SAAU,CACtB,IAAMgB,EAAe,SAAS,cAAc,gBAAgB,EACxDA,IACF,EAAE,eAAe,EACjBb,EAAkBa,CAAY,EAElC,CACF,CAAC",
  "names": ["timeoutIds", "isOutsideDialog", "dialogElement", "e", "rect", "handleDialogClose", "dialogId", "handleDialogClick", "bindDialogEvents", "el", "createCloseButton", "closeBtn", "handleTriggerClick", "bindTriggerEvents", "trigger", "getDialogTriggers", "dialogsTriggers", "dialogsElements", "openedDialog"]
}
